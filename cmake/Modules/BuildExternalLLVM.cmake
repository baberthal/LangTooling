
set(LLVM_CONFIGURE_CMAKE_ARGS
  "-DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}"
  "-DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}"
  "-DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}"
  "-DLLVM_TARGETS_TO_BUILD=X86\;ARM\;AArch64\;PowerPC\;SystemZ"
  "-DCMAKE_OSX_DEPLOYMENT_TARGET:STRING=10.9"
  "-DLLVM_ENABLE_LIBCXX:BOOL=TRUE"
  "-DCOMPILER_RT_ENABLE_IOS:BOOL=OFF"
  "-DCOMPILER_RT_ENABLE_WATCHOS:BOOL=OFF"
  "-DCOMPILER_RT_ENABLE_TVOS:BOOL=OFF"
  "-DLLVM_ENABLE_MODULES:BOOL=OFF"
  "-DLLVM_BUILD_EXTERNAL_COMPILER_RT:BOOL=ON"
  "-DLLVM_INCLUDE_DOCS:BOOL=TRUE"
)

message(STATUS "Configuring LLVM with command:")
message("    cmake -G ${CMAKE_GENERATOR} ${LLVM_CONFIGURE_CMAKE_ARGS}")

set(LLVM_BINDIR "${CMAKE_BINARY_DIR}/llvm")

file(MAKE_DIRECTORY ${LLVM_BINDIR})

execute_process(COMMAND
  ${CMAKE_COMMAND} -G "${CMAKE_GENERATOR}" ${LLVM_CONFIGURE_CMAKE_ARGS} ${SLT_LLVM_SRC_DIR}
  WORKING_DIRECTORY "${LLVM_BINDIR}"
)

add_custom_target(llvm ALL
  COMMAND ${CMAKE_COMMAND} --build ${LLVM_BINDIR} -- -j8
  WORKING_DIRECTORY "${LLVM_BINDIR}"
  COMMENT "Building external LLVM"
)

# ExternalProject_Add_StepTargets(ext_LLVM configure)
